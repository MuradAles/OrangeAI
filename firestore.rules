rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles
      allow read: if isSignedIn();
      
      // Users can only create/update their own profile
      allow create, update: if isOwner(userId);
      
      // Users cannot delete profiles
      allow delete: if false;
    }
    
    // Chats collection
    match /chats/{chatId} {
      // Users can read chats they are part of
      allow read: if isSignedIn() && 
        request.auth.uid in resource.data.participantIds;
      
      // Users can create chats
      allow create: if isSignedIn() && 
        request.auth.uid in request.resource.data.participantIds;
      
      // Users in the chat can update it
      allow update: if isSignedIn() && 
        request.auth.uid in resource.data.participantIds;
      
      // Users cannot delete chats
      allow delete: if false;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Users in the chat can read messages
        allow read: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
        
        // Users in the chat can create messages
        allow create: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds &&
          request.auth.uid == request.resource.data.senderId;
        
        // Message sender can update their own messages (for edit/delete status)
        allow update: if isSignedIn() && 
          request.auth.uid == resource.data.senderId;
        
        // Users cannot delete messages
        allow delete: if false;
      }
    }
    
    // Friend requests collection
    match /friendRequests/{requestId} {
      // Users can read requests sent to them or by them
      allow read: if isSignedIn() && 
        (request.auth.uid == resource.data.fromUserId || 
         request.auth.uid == resource.data.toUserId);
      
      // Users can create friend requests
      allow create: if isSignedIn() && 
        request.auth.uid == request.resource.data.fromUserId;
      
      // Recipient can update request (accept/reject)
      allow update: if isSignedIn() && 
        request.auth.uid == resource.data.toUserId;
      
      // Users can delete their own sent requests
      allow delete: if isSignedIn() && 
        request.auth.uid == resource.data.fromUserId;
    }
    
    // Contacts collection
    match /contacts/{contactId} {
      // Users can only read their own contacts
      allow read: if isSignedIn() && 
        request.auth.uid == resource.data.userId;
      
      // Users can create their own contacts
      allow create: if isSignedIn() && 
        request.auth.uid == request.resource.data.userId;
      
      // Users can update their own contacts
      allow update: if isSignedIn() && 
        request.auth.uid == resource.data.userId;
      
      // Users can delete their own contacts
      allow delete: if isSignedIn() && 
        request.auth.uid == resource.data.userId;
    }
    
    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

